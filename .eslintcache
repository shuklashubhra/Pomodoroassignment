[{"D:\\Assignment\\pomodoro\\src\\index.js":"1","D:\\Assignment\\pomodoro\\src\\App.js":"2","D:\\Assignment\\pomodoro\\src\\context\\SettingsContext.js":"3","D:\\Assignment\\pomodoro\\src\\components\\SetPomodoro.js":"4","D:\\Assignment\\pomodoro\\src\\components\\Button.js":"5","D:\\Assignment\\pomodoro\\src\\components\\CountdownAnimation.js":"6"},{"size":298,"mtime":1633955171283,"results":"7","hashOfConfig":"8"},{"size":2217,"mtime":1633955191833,"results":"9","hashOfConfig":"8"},{"size":2149,"mtime":1633955877532,"results":"10","hashOfConfig":"8"},{"size":1815,"mtime":1633955106923,"results":"11","hashOfConfig":"8"},{"size":183,"mtime":1633955078000,"results":"12","hashOfConfig":"8"},{"size":781,"mtime":1633955139708,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1w7lolm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Assignment\\pomodoro\\src\\index.js",[],["29","30"],"D:\\Assignment\\pomodoro\\src\\App.js",["31"],"import React, { useEffect, useContext } from 'react'\nimport Button from './components/Button'\nimport CountdownAnimation from './components/CountdownAnimation'\nimport SetPomodoro from './components/SetPomodoro'\nimport { SettingsContext } from './context/SettingsContext'\n\nconst App = () => {\n\n  const {\n    pomodoro,\n    executing,\n    startAnimate,\n    children,\n    startTimer,\n    pauseTimer,\n    updateExecute,\n    setCurrentTimer,\n    SettingsBtn } = useContext(SettingsContext)\n\n    useEffect(() => {updateExecute(executing)}, [executing, startAnimate])\n\n  return (\n    <div className=\"container\">\n      <h1>Pomodoro</h1>\n      <small>Be productive the right way.</small>\n      {pomodoro !== 0 ?\n      <>\n        <ul className=\"labels\">\n          <li>\n            <Button \n              title=\"Work\" \n              activeClass={executing.active === 'work' ? 'active-label' : undefined} \n              _callback={() => setCurrentTimer('work')} \n            />\n          </li>\n          <li>\n            <Button \n              title=\"Short Break\" \n              activeClass={executing.active === 'short' ? 'active-label' : undefined} \n              _callback={() => setCurrentTimer('short')} \n            />\n          </li>\n          <li>\n            <Button \n              title=\"Long Break\" \n              activeClass={executing.active === 'long' ? 'active-label' : undefined} \n              _callback={() => setCurrentTimer('long')} \n            />\n          </li>\n        </ul>\n        <Button title=\"Settings\" _callback={SettingsBtn} />\n        <div className=\"timer-container\">\n          <div className=\"time-wrapper\">\n              <CountdownAnimation\n                key={pomodoro} \n                timer={pomodoro} \n                animate={startAnimate}\n              >\n                {children}\n              </CountdownAnimation>\n          </div>\n        </div>\n        <div className=\"button-wrapper\">\n          <Button title=\"Start\" activeClass={!startAnimate ? 'active' : undefined} _callback={startTimer} />\n          <Button title=\"Pause\" activeClass={startAnimate ? 'active' : undefined} _callback={pauseTimer} />\n        </div>\n      </> : <SetPomodoro />}\n    </div>\n  )\n}\n\nexport default App\n","D:\\Assignment\\pomodoro\\src\\context\\SettingsContext.js",[],"D:\\Assignment\\pomodoro\\src\\components\\SetPomodoro.js",["32"],"import React, { useContext, useState } from 'react'\r\nimport { SettingsContext } from '../context/SettingsContext'\r\n\r\nconst SetPomodoro = () => {\r\n\r\n    const [newTimer, setNewTimer] = useState({\r\n        work: 0.2,\r\n        short: 0.1,\r\n        long: 0.5,\r\n        active: 'work'\r\n    })\r\n\r\n    const {updateExecute} = useContext(SettingsContext)\r\n\r\n    const handleChange = input => {\r\n        const {name, value} = input.target\r\n        switch (name) {\r\n            case 'work':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    work: parseInt(value)\r\n                })\r\n                break;\r\n            case 'shortBreak':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    short: parseInt(value)\r\n                })\r\n                break;\r\n            case 'longBreak':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    long: parseInt(value)\r\n                })\r\n                break;\r\n        }\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        updateExecute(newTimer)\r\n    }\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form noValidate onSubmit={handleSubmit}>\r\n                <div className=\"input-wrapper\">\r\n                    <input className=\"input\" type=\"number\" name=\"work\" onChange={handleChange} value={newTimer.work} />\r\n                    <input className=\"input\" type=\"number\" name=\"shortBreak\" onChange={handleChange} value={newTimer.short} />\r\n                    <input className=\"input\" type=\"number\" name=\"longBreak\" onChange={handleChange} value={newTimer.long} />\r\n                </div>\r\n                <button type='submit'>Set Timer</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetPomodoro\r\n","D:\\Assignment\\pomodoro\\src\\components\\Button.js",[],"D:\\Assignment\\pomodoro\\src\\components\\CountdownAnimation.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":20,"column":49,"nodeType":"39","endLine":20,"endColumn":74,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":17,"column":9,"nodeType":"43","messageId":"44","endLine":36,"endColumn":10},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateExecute'. Either include it or remove the dependency array.","ArrayExpression",["47"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [executing, startAnimate, updateExecute]",{"range":"50","text":"51"},[532,557],"[executing, startAnimate, updateExecute]"]